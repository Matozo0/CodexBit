@using Markdig
@model CodexBit.Models.DetailsViewModel
@{
    ViewData["Title"] = @Model.Post.Title;
}

<head>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll("pre").forEach(pre => {
                const button = document.createElement("button");
                button.textContent = "Copiar";
                button.classList.add("copy-button", "btn", "btn-secondary", "bi", "bi-clipboard");

                button.addEventListener("click", function () {
                    const code = pre.querySelector("code").innerText;
                    navigator.clipboard.writeText(code).then(() => {
                        button.textContent = "Copiado!";
                        button.classList.replace("bi-clipboard", "bi-check")
                        setTimeout(() => button.textContent = "Copiar", 2000);
                    }).catch(err => console.error("Erro ao copiar: ", err));
                });

                pre.style.position = "relative";
                pre.appendChild(button);
            });
    using CodexBit.Services;
        });
    </script>
    <style>
        .copy-button {
            position: absolute;
            top: 10px;
            right: 10px;
            padding: 5px 10px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        pre {
            border-radius: 10px;
            background-color: lightgray;
            padding: 10px;
        }
    </style>
</head>

<body>
    <div class="align-items-center pb-3 mt-3 mb-3 border-bottom">
        <h1>@Model.Post.Title</h1>

        <p><i>Atualizado em: @Model.Post.UpdatedAt - @CodexBit.Services.TimeHelperService.TimeAgo(Model.Post.UpdatedAt)</i></p>
    </div>

    <div class="row mb-2">
        <div class="col-9 border-end pe-4 border-end">
            <div class="post-content">
                @Html.Raw(Markdown.ToHtml(Model.Post.ContentMarkdown))
            </div>
        </div>
    </div>

    <div class="comments pb-3 m-3 border-top">
        <h5 class="mt-4">Adicionar um novo comentário</h5>

        <form asp-action="CreateComment" method="post" class="row">
            <input type="hidden" name="PostId" value="@Model.Post.Id" />

            <div class="col mb-3">
                <label for="Username" class="form-label">Nome</label>
                <input id="Username" name="Username" class="form-control" required />
            </div>

            <div class="col mb-3">
                <label for="Content" class="form-label">Comentário</label>
                <textarea id="Content" name="Content" class="form-control" required></textarea>
            </div>

            <div class="col align-content-center">
                <button type="submit" class="btn btn-primary">Comentar</button>
            </div>
        </form>

        @foreach (var comment in Model.Comments)
        {
            <div class="comment row mb-4" id="@comment.Id">
                <div class="d-flex align-items-center gap-1">
                    <p class="mb-1 ">@comment.Username -</p>
                    <p class="mb-1 text-secondary">
                        @CodexBit.Services.TimeHelperService.TimeAgo(comment.CreatedAt)
                    </p>
                </div>
                <div class="border rounded-pill p-2">
                    @comment.Content
                </div>
            </div>
        }
    </div>
    <a href="/" class="btn btn-primary">Voltar</a>
</body>
